var i=function(i){var e=this;return void 0===i&&(i={}),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.addListeners=this.addListeners.bind(this),this.handleAudioChunks=this.handleAudioChunks.bind(this),this.flush=this.flush.bind(this),this.audioChunks=[],this.mediaRecorder=null,navigator.mediaDevices.getUserMedia({audio:!0}).then(function(i){return e.mediaRecorder=new MediaRecorder(i),e.addListeners(),e}).catch(function(i){console.log(i.message)})};i.prototype.addListeners=function(){this.mediaRecorder.addEventListener("dataavailable",this.handleAudioChunks)},i.prototype.handleAudioChunks=function(i){this.audioChunks.push(i.data)},i.prototype.start=function(){if(!this.mediaRecorder)return console.warn("No media recorder. call new Recorder"),!1;this.flush(),this.mediaRecorder.start()},i.prototype.flush=function(){this.audioBlob=null,this.audioUrl=null,this.audio=null,this.mediaRecorder=null,this.audioChunks=[]},i.prototype.stop=function(){var i=this;return new Promise(function(e,t){i.mediaRecorder||t("No media recorder. call new Recorder"),i.mediaRecorder.addEventListener("stop",function(){i.audioBlob=new Blob(i.audioChunks),i.audioUrl=URL.createObjectURL(i.audioBlob),i.audio=new Audio(i.audioUrl),e({audioBlob:i.audioBlob,audioUrl:i.audioUrl,audio:i.audio})}),i.mediaRecorder.stop()})},module.exports=i;
//# sourceMappingURL=recorder.js.map
