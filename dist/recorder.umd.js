!function(e,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):e.recorderAudio=i()}(this,function(){var e=function(e){var i=this;return void 0===e&&(e={}),this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.addListeners=this.addListeners.bind(this),this.handleAudioChunks=this.handleAudioChunks.bind(this),this.flush=this.flush.bind(this),this.audioChunks=[],this.mediaRecorder=null,navigator.mediaDevices.getUserMedia({audio:!0}).then(function(e){return i.mediaRecorder=new MediaRecorder(e),i.addListeners(),i}).catch(function(e){console.log(e.message)})};return e.prototype.addListeners=function(){this.mediaRecorder.addEventListener("dataavailable",this.handleAudioChunks)},e.prototype.handleAudioChunks=function(e){this.audioChunks.push(e.data)},e.prototype.start=function(){if(!this.mediaRecorder)return console.warn("No media recorder. call new Recorder"),!1;this.flush(),this.mediaRecorder.start()},e.prototype.flush=function(){this.audioBlob=null,this.audioUrl=null,this.audio=null,this.mediaRecorder=null,this.audioChunks=[]},e.prototype.stop=function(){var e=this;return new Promise(function(i,t){e.mediaRecorder||t("No media recorder. call new Recorder"),e.mediaRecorder.addEventListener("stop",function(){e.audioBlob=new Blob(e.audioChunks),e.audioUrl=URL.createObjectURL(e.audioBlob),e.audio=new Audio(e.audioUrl),i({audioBlob:e.audioBlob,audioUrl:e.audioUrl,audio:e.audio})}),e.mediaRecorder.stop()})},e});
//# sourceMappingURL=recorder.umd.js.map
